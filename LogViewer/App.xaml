<Application x:Class="LogViewer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"
             StartupUri="View/MainWindow.xaml" Startup="Application_Startup">
    <Application.Resources>

        <Style BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
               TargetType="Button"
               x:Key="ButtonTrans">
            <Setter Property="Width" Value="25"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
        </Style>

        <Style TargetType="Button">

        </Style>

        <Style x:Key="Button30x30" TargetType="Button">
            <Setter Property="Width" Value="30"></Setter>
            <Setter Property="Height" Value="30"></Setter>
        </Style>

        <Style x:Key="Button25x25" TargetType="Button">
            <Setter Property="Width" Value="25"></Setter>
            <Setter Property="Height" Value="25"></Setter>
        </Style>

        <Style x:Key="ButtonCollapseColorFilter" TargetType="Button" BasedOn="{StaticResource Button25x25}">
            <Setter Property="FontFamily" Value="Marlett"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
        </Style>

        <!--WrapPanel-->
        <Style TargetType="WrapPanel">

        </Style>
        <Style BasedOn="{StaticResource {x:Type WrapPanel}}"
               TargetType="WrapPanel"
               x:Key="WrapPanelShortcut">
            <Setter Property="Margin" Value="5,0,5,0"></Setter>
            <Setter Property="Orientation" Value="Horizontal"></Setter>
            <Style.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource Button30x30}">
                </Style>
            </Style.Resources>
        </Style>

        <Style BasedOn="{StaticResource {x:Type WrapPanel}}"
               TargetType="WrapPanel"
               x:Key="WrapPanelFilter">
            <Setter Property="Margin" Value="0,5,5,5"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="Orientation" Value="Vertical"></Setter>
            <Style.Resources>
                <Style TargetType="WrapPanel">
                    <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                    <Setter Property="Orientation" Value="Horizontal"></Setter>
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Width" Value="165"></Setter>
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Width" Value="124"></Setter>
                    <Setter Property="Margin" Value="15,0,0,0"></Setter>
                </Style>
                <Style TargetType="Button" BasedOn="{StaticResource Button25x25}">
                    <Setter Property="Margin" Value="5,0,0,0"></Setter>
                </Style>
            </Style.Resources>
        </Style>

        <Style BasedOn="{StaticResource {x:Type WrapPanel}}"
               TargetType="WrapPanel"
               x:Key="WrapColorButtonFilter">
            <Style.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="5,0,0,0"></Setter>
                    <Setter Property="Height" Value="25"></Setter>
                    <Setter Property="Width" Value="45"></Setter>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="ToggleButton" x:Key="ColorToggleButton">
            <Setter Property="Margin" Value="5,0,0,0"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Width" Value="45"></Setter>
        </Style>

        <Style BasedOn="{StaticResource {x:Type WrapPanel}}"
               TargetType="WrapPanel"
               x:Key="WrapColorToggleButtonFilter">
            <Style.Resources>
                <Style TargetType="ToggleButton">
                    <Setter Property="Margin" Value="5,0,0,0"></Setter>
                    <Setter Property="Height" Value="25"></Setter>
                    <Setter Property="Width" Value="45"></Setter>
                </Style>
            </Style.Resources>
        </Style>

        <Style BasedOn="{StaticResource {x:Type WrapPanel}}"
               TargetType="WrapPanel"
               x:Key="WrapFullColorButtonFilter">
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Style.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="2"></Setter>
                    <Setter Property="Height" Value="25"></Setter>
                    <Setter Property="Width" Value="45"></Setter>
                </Style>
            </Style.Resources>
        </Style>

        <Style BasedOn="{StaticResource {x:Type WrapPanel}}"
               TargetType="WrapPanel"
               x:Key="WrapFullColorToggleButtonFilter">
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Style.Resources>
                <Style TargetType="ToggleButton">
                    <Setter Property="Margin" Value="2"></Setter>
                    <Setter Property="Height" Value="25"></Setter>
                    <Setter Property="Width" Value="45"></Setter>
                </Style>
            </Style.Resources>
        </Style>

        <Style BasedOn="{StaticResource {x:Type WrapPanel}}"
               TargetType="WrapPanel"
               x:Key="WrapColorButtonBottom">
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Style.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="2"></Setter>
                    <Setter Property="Height" Value="25"></Setter>
                    <Setter Property="Width" Value="62"></Setter>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="WrapPanel" x:Key="WrapColorFilter_NF">
            <Setter Property="Margin" Value="5,10,0,0"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="Orientation" Value="Horizontal"></Setter>

            <Style.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Height" Value="Auto"></Setter>
                    <Setter Property="TextWrapping" Value="Wrap"></Setter>
                    <Setter Property="Margin" Value="10,0,0,0"></Setter>
                    <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
                    <Setter Property="FontSize" Value="16"></Setter>
                </Style>
            </Style.Resources>
        </Style>

        <!--StackPanel-->
        <Style TargetType="StackPanel">

        </Style>

        <Style BasedOn="{StaticResource {x:Type StackPanel}}"
               TargetType="StackPanel"
               x:Key="StackPanelLogRecord">
            <Setter Property="Margin" Value="0,0,5,5"></Setter>
        </Style>

        <!--Tab Control-->
        <Style TargetType="TabControl">

        </Style>
        <Style BasedOn="{StaticResource {x:Type TabControl}}"
               TargetType="TabControl"
               x:Key="TabControlLogReport">
            <Setter Property="Height" Value="190"></Setter>
            <Style.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Width" Value="70"></Setter>
                </Style>
            </Style.Resources>

        </Style>

        <!--Tab Control-->
        <Style TargetType="DockPanel">

        </Style>
        <Style BasedOn="{StaticResource {x:Type DockPanel}}"
               TargetType="DockPanel"
               x:Key="DockPanelLogReport">
            <Setter Property="Margin" Value="0,0,5,0"></Setter>
        </Style>
        
        <!--Border-->
        <Style TargetType="Border" x:Key="BorderGray1px">
            <Setter Property="BorderBrush" Value="Gray"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
        </Style>

        <Style TargetType="Border" BasedOn="{StaticResource BorderGray1px}" x:Key="BorderColorFilterRow">
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="Padding" Value="5,5,5,5"></Setter>
        </Style>
        
        <Style TargetType="Border" BasedOn="{StaticResource BorderGray1px}" x:Key="BorderColorFilterArena">
            <Setter Property="Background" Value="GhostWhite"></Setter>
            <Setter Property="Width" Value="300"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="VerticalAlignment" Value="Top"></Setter>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="Opacity" Value="1"></Setter>
        </Style>

        <Style TargetType="{x:Type toolkit:DataGridColumnHeader}" x:Key="DataGridHeaderCenter">
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="{x:Type toolkit:DataGridCell}" x:Key="DataGridCellCenter">
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        </Style>

        <Style x:Key="{x:Type Label}"
       TargetType="{x:Type Label}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RecognizesAccessKey="False"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                             Value="false">
                                <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
