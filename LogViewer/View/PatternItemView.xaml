<Window x:Class="LogViewer.View.PatternItemView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"
        xmlns:properties="clr-namespace:LogViewer.Properties"
        xmlns:Service="clr-namespace:LogViewer.Service"
        Service:DialogService.IsRegisteredView="True"
        xmlns:mvvm="clr-namespace:LogViewer.MVVMHelper"
        Title="{Binding Title}" Height="360" Width="350" WindowStyle="SingleBorderWindow" WindowStartupLocation="CenterOwner" ResizeMode="NoResize" Icon="/LogViewer;component/Images/pattern.png">
    <Window.Resources>
        <mvvm:CommandReference x:Key="OkCommandReference" Command="{Binding OkCommand}" />
        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                    <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Foreground" Value="Red" />
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Enter" Command="{StaticResource OkCommandReference}" />
    </Window.InputBindings>
    <Grid>
        <AdornerDecorator>
            <StackPanel Margin="5">
                <StackPanel Name="RegisterPatternSetup_Info" >
                    <WrapPanel HorizontalAlignment="Stretch">
                        <Grid HorizontalAlignment="Stretch" Width="317" Margin="0,5,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{x:Static properties:Resources.NameColon}" Margin="5,0,0,0" Height="22" VerticalAlignment="Top" />
                            <TextBox HorizontalAlignment="Left" Width="192" MaxLength="50" Grid.Column="1" 
                                     Text="{Binding Name, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Margin="8,0,0,0" />
                            <TextBlock Text="{x:Static properties:Resources.RootKeywordColon}" Grid.Row="1" Grid.Column="0" Margin="5,0,0,0"/>
                            <TextBox HorizontalAlignment="Stretch" MaxLength="50" Grid.Row="1" Grid.Column="1" 
                                     Text="{Binding RootKeyword, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Margin="8,0,17,0" />
                            <TextBlock Text="{x:Static properties:Resources.TimeConditionColon}" Grid.Row="2" Grid.Column="0" Margin="5,0,0,0"/>
                            <WrapPanel HorizontalAlignment="Stretch" Grid.Row="2" Grid.Column="1">
                                    <TextBox HorizontalAlignment="Left" Width="100" MaxLength="3" Grid.Row="2" Grid.Column="1" PreviewTextInput="TextBox_PreviewTextInput" Margin="8,0,0,0">
                                        <mvvm:DataPiping.DataPipes>
                                            <mvvm:DataPipeCollection>
                                                <mvvm:DataPipe Source="{Binding (Validation.HasError), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"
                                                    Target="{Binding Path=IsErrorAtTime, Mode=OneWayToSource}"/>
                                            </mvvm:DataPipeCollection>
                                        </mvvm:DataPiping.DataPipes>
                                        <TextBox.Text>
                                            <Binding Path="Time" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                                <Binding.ValidationRules>
                                                    <mvvm:IsUlongRule Message="{x:Static properties:Resources.PleaseInputNumberValueGreaterOrEqual0}" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                <ComboBox Width="70" Margin="10,0,0,0" 
                                          ItemsSource="{Binding TimeUnitList}"
                                          SelectedValue="{Binding TimeUnit}" 
                                          DisplayMemberPath="Display"
                                          SelectedValuePath="Value"
                                          >
                                </ComboBox>
                            </WrapPanel>
                        </Grid>
                    </WrapPanel>
                </StackPanel>
                <Border BorderBrush="Gray" BorderThickness="1" HorizontalAlignment="Stretch">
                    <Grid Height="200" DataContext="{Binding KeysListDataGridVM}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <toolkit:DataGrid PreviewKeyDown="DataGrid_KeyDown"
                                Grid.Row="0" Grid.Column="0"
                                AutoGenerateColumns="False" CanUserAddRows="False" 
                                              HorizontalScrollBarVisibility="Disabled"
                                              mvvm:DatagridHelper.RecordToShow="{Binding RowForJump}"
                                              Margin="2"
                                         ItemsSource="{Binding SourceList}" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False">
                            <mvvm:DataPiping.DataPipes>
                                <mvvm:DataPipeCollection>
                                    <mvvm:DataPipe Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type toolkit:DataGrid}}, Path=SelectedItems}"
                                        Target="{Binding Path=SelectedItems, Mode=OneWayToSource}"/>
                                </mvvm:DataPipeCollection>
                            </mvvm:DataPiping.DataPipes>
                            <toolkit:DataGrid.Resources>
                                <Style TargetType="{x:Type toolkit:DataGridColumnHeader}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                                </Style>
                            </toolkit:DataGrid.Resources>
                            <!--<toolkit:DataGrid.RowHeaderStyle>
                                <Style TargetType="{x:Type toolkit:DataGridRowHeader}">
                                    <Setter Property="Content" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type toolkit:DataGridRow}}, Converter={mvvm:RowToIndexConverter}}" />
                                </Style>
                            </toolkit:DataGrid.RowHeaderStyle>-->
                            <toolkit:DataGrid.Columns>
                                <toolkit:DataGridTextColumn Header="" Binding="{Binding Path=Index}" Width="40" IsReadOnly="True">
                                </toolkit:DataGridTextColumn>
                                <toolkit:DataGridTextColumn Header="{x:Static properties:Resources.String}" Binding="{Binding Path=Value}" Width="*">
                                </toolkit:DataGridTextColumn>
                            </toolkit:DataGrid.Columns>
                        </toolkit:DataGrid>
                        <WrapPanel Grid.Row="0" Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Button Content="{x:Static properties:Resources.Add}" Command="{Binding AddCommand}" Width="70" Margin="5"></Button>
                            <Button Content="{x:Static properties:Resources.Delete}" Width="70" Margin="5" Command="{Binding DeleteCommand}"></Button>
                        </WrapPanel>
                            <TextBlock Grid.Row="1" Grid.Column="0" 
                                       Grid.ColumnSpan="2"
                                       Text="{Binding ErrorMessage}" Foreground="Red" VerticalAlignment="Bottom" />
                    </Grid>
                </Border>
                <WrapPanel Margin="5" HorizontalAlignment="Center">
                    <Button Content="{x:Static properties:Resources.OK}" Width="70" Margin="0,0,20,0" Command="{Binding OkCommand}"></Button>
                    <Button Content="{x:Static properties:Resources.Cancel}" Command="{Binding CloseCommand}" Width="70" Margin="0"></Button>
                </WrapPanel>
            </StackPanel>
        </AdornerDecorator>
    </Grid>
</Window>
