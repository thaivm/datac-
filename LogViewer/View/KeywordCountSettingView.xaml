<Window x:Class="LogViewer.View.KeywordCountSettingView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:toolkit1="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"
        xmlns:mvvm="clr-namespace:LogViewer.MVVMHelper"
        xmlns:Service="clr-namespace:LogViewer.Service"
        xmlns:properties="clr-namespace:LogViewer.Properties"
        Service:DialogService.IsRegisteredView="True"
        Title="{Binding Title}" mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        Width="450"
        SizeToContent="Height" ResizeMode="NoResize" WindowStyle="SingleBorderWindow" WindowStartupLocation="CenterOwner" Icon="/LogViewer;component/Images/key.png">
    <Window.Resources>
        <mvvm:CommandReference x:Key="OkCommandReference" Command="{Binding OkCommand}" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Enter" Command="{StaticResource OkCommandReference}" />
    </Window.InputBindings>
    <Grid>
        <StackPanel Margin="5">
            <toolkit:DataGrid Name="dtgEditKeyword" CanUserAddRows="False"
                              IsReadOnly="True"
                                AutoGenerateColumns="False" Height="200" 
                              mvvm:DatagridHelper.DoubleClickedRow ="{Binding DoubleClickedCandidate, Mode=TwoWay}"
                                ItemsSource="{Binding ItemSettingList}" PreviewKeyDown="DataGrid_KeyDown" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False">
                <mvvm:DataPiping.DataPipes>
                    <mvvm:DataPipeCollection>
                        <mvvm:DataPipe Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type toolkit:DataGrid}}, Path=SelectedItems}"
                         Target="{Binding Path=SelectedItems, Mode=OneWayToSource}"/>
                    </mvvm:DataPipeCollection>
                </mvvm:DataPiping.DataPipes>
                <toolkit:DataGrid.Columns>
                    <toolkit:DataGridTextColumn Header="{x:Static properties:Resources.Name}" Width="2*" Binding="{Binding Path=Name}"/>
                    <toolkit:DataGridTextColumn Header="{x:Static properties:Resources.String}" Width="2*" Binding="{Binding Path=StringValue}"/>
                    <toolkit:DataGridTextColumn Header="{x:Static properties:Resources.LogItem}" Width="*" Binding="{Binding Path=LogItem}"/>
                    <toolkit:DataGridTemplateColumn Header="{x:Static properties:Resources.Enable}" Width="*">
                        <toolkit:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Path=Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </toolkit:DataGridTemplateColumn.CellTemplate>
                    </toolkit:DataGridTemplateColumn>
                </toolkit:DataGrid.Columns>
                <toolkit:DataGrid.RowStyle>
                    <Style TargetType="{x:Type toolkit:DataGridRow}">
                        <EventSetter Event="MouseDoubleClick"
                            Handler="OnDatagridRowMouseDoubleClick" />
                    </Style>
                </toolkit:DataGrid.RowStyle>
            </toolkit:DataGrid>
            <WrapPanel HorizontalAlignment="Center" Margin="5">
                <Button Content="{x:Static properties:Resources.Add}" Width="80" Margin="5" Command="{Binding AddItemSettingCommand}"/>
                <Button Content="{x:Static properties:Resources.Overwrite}" Width="80" Margin="5" Command="{Binding OverwriteItemSettingCommand}" />
                <Button Content="{x:Static properties:Resources.Delete}" Width="80" Margin="5" Command="{Binding DeleteItemSettingCommand}" />
            </WrapPanel>
            <Border BorderBrush="Gray" BorderThickness="1" HorizontalAlignment="Stretch" Width="280">
                <StackPanel HorizontalAlignment="Stretch" Margin="5" Height="110">
                    <AdornerDecorator>
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="5*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="true">
                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                                        <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="{x:Type ToolTip}" 
                                    TargetType="{x:Type ToolTip}">
                                <Setter Property="Foreground" Value="Red" />
                            </Style>
                        </Grid.Resources>
                        <Label Content="{x:Static properties:Resources.NameColon}" HorizontalContentAlignment="Right" Grid.Row="0" Grid.Column="0" Margin="0,0,0,5"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Margin="0,0,0,5" Text="{Binding Name, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
                        <Label Content="{x:Static properties:Resources.KeywordColon}" HorizontalContentAlignment="Right" Grid.Row="1" Grid.Column="0" Margin="0,0,0,5"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Margin="0,0,0,5" Text="{Binding StringValue, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="{x:Static properties:Resources.LogItemColon}" HorizontalContentAlignment="Right" Grid.Row="2" Grid.Column="0" Margin="0,0,0,5"/>
                        <ComboBox Grid.Row="2" Grid.Column="1"
                                 Margin="0,0,0,5" 
                                  ItemsSource="{Binding AllLogItems}"
                                  SelectedValue="{Binding LogItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  DisplayMemberPath="Display"
                                  SelectedValuePath="Value"/>
                    </Grid>
                    </AdornerDecorator>
                </StackPanel>
            </Border>
            <WrapPanel HorizontalAlignment="Center">
                <Button Content="{x:Static properties:Resources.OK}" Margin="5" Width="50" Command="{Binding OkCommand}" />
                <Button Content="{x:Static properties:Resources.Apply}" Margin="5"  Width="50" Command="{Binding ApplyCommand}"/>
                <Button Content="{x:Static properties:Resources.Cancel}" Margin="5" Width="50" IsCancel="True" Command="{Binding CloseCommand}"/>
            </WrapPanel>
        </StackPanel>
    </Grid>
</Window>
