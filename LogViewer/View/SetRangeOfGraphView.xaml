<Window x:Class="LogViewer.View.SetRangeOfGraphView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"
        xmlns:view="clr-namespace:LogViewer.View"
        xmlns:mvvm="clr-namespace:LogViewer.MVVMHelper"
        xmlns:properties="clr-namespace:LogViewer.Properties"
        Title="Range Of Graph Setting" SizeToContent="Height" Width="351" 
        ResizeMode="NoResize" WindowStyle="SingleBorderWindow" WindowStartupLocation="CenterOwner" Icon="/LogViewer;component/Images/graph_e.png">
    <Grid>
        <Grid.Resources>
            <mvvm:FractionToDoubleConverter x:Key="FractionToDouble" />
            <Style TargetType="{x:Type Control}">
                <Setter Property="Margin" Value="5"></Setter>
                <Setter Property="MinWidth" Value="50"></Setter>
                <Setter Property="Padding" Value="5"></Setter>
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="5"></Setter>
                <Setter Property="MinWidth" Value="50"></Setter>
                <Setter Property="Padding" Value="5"></Setter>
            </Style>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type Control}}" >
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                        <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Control}}" />
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Control}}" />
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type Control}}" />
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type Control}}" />
            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type Control}}" />
            <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource {x:Type Control}}">
            </Style>
            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="Foreground" Value="Red" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0">X Range</TextBlock>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0">From</TextBlock>
            <TextBlock Grid.Row="1" Grid.Column="0">To</TextBlock>
            <view:DateTimePicker Grid.Row="0" Grid.Column="1"
                                    SelectedDate="{Binding From, Mode=TwoWay}" MinimumDate="{Binding Min, Mode=OneWay}" MaximumDate="{Binding Max, Mode=OneWay}"/>
            <view:DateTimePicker Grid.Row="1" Grid.Column="1" 
                                 SelectedDate="{Binding To, Mode=TwoWay}" MinimumDate="{Binding Min, Mode=OneWay}" MaximumDate="{Binding Max, Mode=OneWay}"/>
        </Grid>
        <TextBlock Grid.Row="2">1st Y Range</TextBlock>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock>From:</TextBlock>
            <TextBox Grid.Column="1" MaxLength="10">
                <mvvm:DataPiping.DataPipes>
                    <mvvm:DataPipeCollection>
                        <mvvm:DataPipe Source="{Binding (Validation.HasError), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"
                                                    Target="{Binding Path=IsErrorAtFirstYRangeFrom, Mode=OneWayToSource}"/>
                    </mvvm:DataPipeCollection>
                </mvvm:DataPiping.DataPipes>
                <TextBox.Text>
                    <Binding Path="FirstYRangeFrom" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" 
                             Converter="{StaticResource FractionToDouble}">
                        <Binding.ValidationRules>
                            <mvvm:IsDoubleRule
                                Message="{x:Static properties:Resources.PleaseInputAValidDecimalNumberOrAValidFraction}" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Grid.Column="2">To:</TextBlock>
            <TextBox Grid.Column="3" MaxLength="10">
                <mvvm:DataPiping.DataPipes>
                    <mvvm:DataPipeCollection>
                        <mvvm:DataPipe Source="{Binding (Validation.HasError), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"
                                                    Target="{Binding Path=IsErrorAtFirstYRangeTo, Mode=OneWayToSource}"/>
                    </mvvm:DataPipeCollection>
                </mvvm:DataPiping.DataPipes>
                <TextBox.Text>
                    <Binding Path="FirstYRangeTo" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay"
                             Converter="{StaticResource FractionToDouble}">
                        <Binding.ValidationRules>
                            <mvvm:IsDoubleRule Message="{x:Static properties:Resources.PleaseInputAValidDecimalNumberOrAValidFraction}" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <TextBlock Grid.Row="4">2nd Y Range</TextBlock>
        <Grid Grid.Row="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock>From:</TextBlock>
            <TextBox Grid.Column="1" MaxLength="10">
                <mvvm:DataPiping.DataPipes>
                    <mvvm:DataPipeCollection>
                        <mvvm:DataPipe Source="{Binding (Validation.HasError), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"
                                                    Target="{Binding Path=IsErrorAtSecondYRangeFrom, Mode=OneWayToSource}"/>
                    </mvvm:DataPipeCollection>
                </mvvm:DataPiping.DataPipes>
                <TextBox.Text>
                    <Binding Path="SecondYRangeFrom" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay"
                             Converter="{StaticResource FractionToDouble}">
                        <Binding.ValidationRules>
                            <mvvm:IsDoubleRule Message="{x:Static properties:Resources.PleaseInputAValidDecimalNumberOrAValidFraction}" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Grid.Column="2">To:</TextBlock>
            <TextBox Grid.Column="3" MaxLength="10">
                <mvvm:DataPiping.DataPipes>
                    <mvvm:DataPipeCollection>
                        <mvvm:DataPipe Source="{Binding (Validation.HasError), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"
                                                    Target="{Binding Path=IsErrorAtSecondYRangeTo, Mode=OneWayToSource}"/>
                    </mvvm:DataPipeCollection>
                </mvvm:DataPiping.DataPipes>
                <TextBox.Text>
                    <Binding Path="SecondYRangeTo" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay"
                             Converter="{StaticResource FractionToDouble}">
                        <Binding.ValidationRules>
                            <mvvm:IsDoubleRule Message="{x:Static properties:Resources.PleaseInputAValidDecimalNumberOrAValidFraction}" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <TextBlock Grid.Row="6" Text="{Binding ErrorMessage}" Foreground="Red"/>
        <Grid Grid.Row="7">
            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="10">
                <Button MinWidth="50" Command="{Binding OkCommand}" Content="{x:Static properties:Resources.OK}" />
                <Button MinWidth="50" Command="{Binding CloseCommand}" IsCancel="True" Content="{x:Static properties:Resources.Cancel}" />
            </StackPanel>
        </Grid>
    </Grid>
</Window>
